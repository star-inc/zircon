// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>


extern const fidl_type_t test_name_UnionWithHandleTable;
extern const fidl_type_t test_name_UnionWithHandleNullableRefTable;
extern const fidl_type_t test_name_TableWithHandleTable;
extern const fidl_type_t test_name_HandlesInTypesTable;


static const fidl_type_t HandlevmononnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_VMO, .handle_rights=2147483648u, .nullable=kFidlNullability_Nonnullable}}};

static const fidl_type_t Vector4294967295nonnullable20HandlevmononnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&HandlevmononnullableTable, .max_count=4294967295u, .element_size=4u, .nullable=kFidlNullability_Nonnullable}}};

static const fidl_type_t Array20_20HandlevmononnullableTable = {.type_tag=kFidlTypeArray, {.coded_array={.element=&HandlevmononnullableTable, .array_size=20u, .element_size=4u}}};

static const fidl_type_t Vector4294967295nonnullable30Array20_20HandlevmononnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&Array20_20HandlevmononnullableTable, .max_count=4294967295u, .element_size=20u, .nullable=kFidlNullability_Nonnullable}}};


static const struct FidlXUnionField Fields25test_name_UnionWithHandle[] = {
    /*FidlXUnionField*/{.type=&HandlevmononnullableTable, .ordinal=1u}
};
const fidl_type_t test_name_UnionWithHandleTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=1u, .fields=Fields25test_name_UnionWithHandle, .nullable=kFidlNullability_Nonnullable, .name="test.name/UnionWithHandle", .strictness=kFidlStrictness_Flexible}}};
static const struct FidlXUnionField Fields36test_name_UnionWithHandleNullableRef[] = {
    /*FidlXUnionField*/{.type=&HandlevmononnullableTable, .ordinal=1u}
};
const fidl_type_t test_name_UnionWithHandleNullableRefTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=1u, .fields=Fields36test_name_UnionWithHandleNullableRef, .nullable=kFidlNullability_Nullable, .name="test.name/UnionWithHandle", .strictness=kFidlStrictness_Flexible}}};
static const struct FidlTableField Fields25test_name_TableWithHandle[] = {
    /*FidlTableField*/{.type=&HandlevmononnullableTable, .ordinal=1u}
};
const fidl_type_t test_name_TableWithHandleTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields25test_name_TableWithHandle, .field_count=1u, .name="test.name/TableWithHandle"}}};

static const struct FidlStructField Fields24test_name_HandlesInTypes[] = {
    /*FidlStructField*/{.type=&HandlevmononnullableTable, .offset=0u, .padding=4u},
    /*FidlStructField*/{.type=&Vector4294967295nonnullable20HandlevmononnullableTable, .offset=8u, .padding=0u},
    /*FidlStructField*/{.type=&Array20_20HandlevmononnullableTable, .offset=24u, .padding=4u},
    /*FidlStructField*/{.type=&Vector4294967295nonnullable30Array20_20HandlevmononnullableTable, .offset=48u, .padding=0u},
    /*FidlStructField*/{.type=&test_name_TableWithHandleTable, .offset=64u, .padding=0u},
    /*FidlStructField*/{.type=&test_name_UnionWithHandleTable, .offset=80u, .padding=0u}
};
const fidl_type_t test_name_HandlesInTypesTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields24test_name_HandlesInTypes, .field_count=6u, .size=104u, .name="test.name/HandlesInTypes"}}};

