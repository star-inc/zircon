# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/test.gni")
import("//build/unification/images/migrated_manifest.gni")

executable("ptysvc") {
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [ "main.cc" ]
  deps = [
    ":common",
    "//src/sys/lib/stdout-to-debuglog/cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fidl-async-cpp",
  ]
}

source_set("common") {
  visibility = [ ":*" ]
  sources = [
    "fifo.cc",
    "fifo.h",
    "pty-client-device.cc",
    "pty-client-device.h",
    "pty-client-vnode.h",
    "pty-client.cc",
    "pty-client.h",
    "pty-server-device.cc",
    "pty-server-device.h",
    "pty-server-vnode.h",
    "pty-server.cc",
    "pty-server.h",
  ]
  public_deps = [
    "//sdk/fidl/fuchsia.hardware.pty:fuchsia.hardware.pty_llcpp",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zx",
    "//zircon/system/fidl/fuchsia-device:llcpp",
    "//zircon/system/ulib/fs",
    "//zircon/system/ulib/fs-pty",
  ]

  deps = [
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fidl-async-cpp",
    "//zircon/system/fidl/fuchsia-io:llcpp",
  ]
}

test("ptysvc-test") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  test_group = "sys"

  sources = [ "pty-tests.cc" ]
  deps = [
    ":common",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/zxtest",
    "//zircon/system/fidl/fuchsia-io:llcpp",
  ]
}

migrated_manifest("ptysvc-manifest") {
  deps = [ ":ptysvc" ]
}

migrated_manifest("ptysvc-test-manifest") {
  deps = [ ":ptysvc-test" ]
}
