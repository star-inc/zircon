# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/test.gni")
import("//build/unification/images/migrated_manifest.gni")
import("//build/unification/zx_library.gni")

zx_library("crashsvc") {
  sdk = "source"

  sdk_headers = [ "crashsvc/crashsvc.h" ]

  sources = [ "crashsvc.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.exception:fuchsia.exception_llcpp",
    "//zircon/public/lib/backtrace-request-utils",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fdio",
    "//zircon/system/ulib/inspector",
  ]

  public_deps = [ "//zircon/public/lib/zx" ]

  defines = [ "_ALL_SOURCE" ]
}

executable("svchost") {
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  sources = [
    "svchost.cc",
    "sysmem.cc",
  ]
  deps = [
    ":crashsvc",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_c",
    "//sdk/fidl/fuchsia.fshost:fuchsia.fshost_c",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_c",
    "//sdk/fidl/fuchsia.hardware.pty:fuchsia.hardware.pty_c",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_c",
    "//sdk/fidl/fuchsia.logger:fuchsia.logger_c",
    "//sdk/fidl/fuchsia.paver:fuchsia.paver_c",
    "//sdk/fidl/fuchsia.scheduler:fuchsia.scheduler_c",
    "//sdk/fidl/fuchsia.sysinfo:fuchsia.sysinfo_c",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_c",
    "//sdk/fidl/fuchsia.virtualconsole:fuchsia.virtualconsole_c",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/fdio",
    "//zircon/system/fidl/fuchsia-device:c",
    "//zircon/system/fidl/fuchsia-device:llcpp",
    "//zircon/system/fidl/fuchsia-device-manager:c",
    "//zircon/system/fidl/fuchsia-io:c",
    "//zircon/system/fidl/fuchsia-mem:c",
    "//zircon/system/fidl/fuchsia-net:llcpp",
    "//zircon/system/fidl/fuchsia-posix-socket:llcpp",
    "//zircon/system/fidl/fuchsia-process:c",
    "//zircon/system/ulib/fs",
    "//zircon/system/ulib/kcounter",
    "//zircon/system/ulib/kernel-debug",
    "//zircon/system/ulib/kernel-mexec",
    "//zircon/system/ulib/logger",
    "//zircon/system/ulib/profile",
    "//zircon/system/ulib/svc",
    "//zircon/system/ulib/sysmem-connector",
  ]
  output_dir = "$root_out_dir/zircon-migrated"
}

test("crashsvc-test") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  if (is_fuchsia) {
    testonly = false
  }
  if (is_fuchsia) {
    configs += [ "//build/unification/config:zircon-migrated" ]
  }
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  output_name = "crashsvc-test"
  sources = [ "crashsvc-test.cc" ]
  deps = [
    ":crashsvc",
    "//sdk/fidl/fuchsia.exception:fuchsia.exception_llcpp",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fidl-async-cpp",
    "//zircon/public/lib/mini-process",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/fs",
  ]
}

migrated_manifest("svchost-manifest") {
  deps = [ ":svchost" ]
}

migrated_manifest("crashsvc-test-manifest") {
  deps = [ ":crashsvc-test" ]
}
